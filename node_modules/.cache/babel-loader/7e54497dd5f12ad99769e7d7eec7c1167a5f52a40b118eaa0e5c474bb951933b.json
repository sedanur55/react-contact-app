{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SedanurDurmu\\u015F\\\\contact-app\\\\src\\\\components\\\\Contacts\\\\Form\\\\index.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form({\n  addContact,\n  contacts\n}) {\n  _s();\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      email: ''\n    },\n    onSubmit: values => {\n      addContact([...contacts, values]);\n      formik.resetForm(); // resetForm'u doğrudan formik üzerinden çağırın\n    }\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"username\",\n          placeholder: \"User Name\",\n          onChange: formik.handleChange,\n          value: formik.values.username // value prop'unu ekleyin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          placeholder: \"Email\",\n          onChange: formik.handleChange,\n          value: formik.values.email // value prop'unu ekleyin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n}\n_s(Form, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", true);\n_c = Form;\nexport default Form;\n\n// const initialForm = { username:\"\",email:\"\"};\n// function Form({addContact,contacts}) {\n\n//     const [form,setForm] = useState(initialForm);\n//     useEffect(()=>{\n//         setForm(initialForm);\n//     },[contacts])\n//     const onChangeInput= (event)=>{\n//         setForm({...form,[event.target.name]:event.target.value})\n//     }\n//     const onSubmit= (event)=>{\n//         event.preventDefault();\n//         if(form.username ==='' || form.email ==='') {\n//             return false;\n//         }\n//         addContact([...contacts,form]);\n//     }\n//   return (\n//     <div>\n//         <Formik\n//       initialValues={{\n//         username: '',\n//         email: '',\n//       }}\n\n//       onSubmit={(values, { resetForm }) => {\n//         addContact([...contacts,values]);\n//         resetForm();\n//       }}\n//     >\n//        { ({handleSubmit,handleChange})=>(\n//         <form onSubmit={handleSubmit}>\n//         <div><input name='username' placeholder='User Name' value={values.username} onChange={handleChange}></input></div>\n//         <div><input name='email' placeholder='Email' value={values.email}  onChange={handleChange}></input></div>\n//         <div><button onClick={handleSubmit} >Add</button></div></form>\n\n//         )}\n//     </Formik>\n\n//     </div>\n//   )\n// }\n\n// export default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","Formik","jsxDEV","_jsxDEV","Form","addContact","contacts","_s","formik","useFormik","initialValues","username","email","onSubmit","values","resetForm","children","handleSubmit","name","placeholder","onChange","handleChange","value","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/Users/SedanurDurmuş/contact-app/src/components/Contacts/Form/index.js"],"sourcesContent":["import React from 'react'\r\nimport {useState,useEffect} from 'react';\r\nimport { Formik } from 'formik';\r\n\r\nfunction Form({ addContact, contacts }) {\r\n    const formik = useFormik({\r\n      initialValues: {\r\n        username: '',\r\n        email: '',\r\n      },\r\n      onSubmit: (values) => {\r\n        addContact([...contacts, values]);\r\n        formik.resetForm(); // resetForm'u doğrudan formik üzerinden çağırın\r\n      },\r\n    });\r\n  \r\n    return (\r\n      <div>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <div>\r\n            <input\r\n              name=\"username\"\r\n              placeholder=\"User Name\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.username} // value prop'unu ekleyin\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.email} // value prop'unu ekleyin\r\n            />\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">Add</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Form;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const initialForm = { username:\"\",email:\"\"};\r\n// function Form({addContact,contacts}) {\r\n    \r\n//     const [form,setForm] = useState(initialForm);\r\n//     useEffect(()=>{\r\n//         setForm(initialForm);\r\n//     },[contacts])\r\n//     const onChangeInput= (event)=>{\r\n//         setForm({...form,[event.target.name]:event.target.value})\r\n//     }\r\n//     const onSubmit= (event)=>{\r\n//         event.preventDefault();\r\n//         if(form.username ==='' || form.email ==='') {\r\n//             return false;\r\n//         }\r\n//         addContact([...contacts,form]);\r\n//     }\r\n//   return (\r\n//     <div>\r\n//         <Formik\r\n//       initialValues={{\r\n//         username: '',\r\n//         email: '',\r\n//       }}\r\n      \r\n//       onSubmit={(values, { resetForm }) => {\r\n//         addContact([...contacts,values]);\r\n//         resetForm();\r\n//       }}\r\n//     >\r\n//        { ({handleSubmit,handleChange})=>(\r\n//         <form onSubmit={handleSubmit}>\r\n//         <div><input name='username' placeholder='User Name' value={values.username} onChange={handleChange}></input></div>\r\n//         <div><input name='email' placeholder='Email' value={values.email}  onChange={handleChange}></input></div>\r\n//         <div><button onClick={handleSubmit} >Add</button></div></form>\r\n\r\n//         )}\r\n//     </Formik>\r\n        \r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default Form;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,EAACC,SAAS,QAAO,OAAO;AACxC,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,IAAIA,CAAC;EAAEC,UAAU;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACpC,MAAMC,MAAM,GAAGC,SAAS,CAAC;IACvBC,aAAa,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE;IACT,CAAC;IACDC,QAAQ,EAAGC,MAAM,IAAK;MACpBT,UAAU,CAAC,CAAC,GAAGC,QAAQ,EAAEQ,MAAM,CAAC,CAAC;MACjCN,MAAM,CAACO,SAAS,CAAC,CAAC,CAAC,CAAC;IACtB;EACF,CAAC,CAAC;;EAEF,oBACEZ,OAAA;IAAAa,QAAA,eACEb,OAAA;MAAMU,QAAQ,EAAEL,MAAM,CAACS,YAAa;MAAAD,QAAA,gBAClCb,OAAA;QAAAa,QAAA,eACEb,OAAA;UACEe,IAAI,EAAC,UAAU;UACfC,WAAW,EAAC,WAAW;UACvBC,QAAQ,EAAEZ,MAAM,CAACa,YAAa;UAC9BC,KAAK,EAAEd,MAAM,CAACM,MAAM,CAACH,QAAS,CAAC;QAAA;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNvB,OAAA;QAAAa,QAAA,eACEb,OAAA;UACEe,IAAI,EAAC,OAAO;UACZC,WAAW,EAAC,OAAO;UACnBC,QAAQ,EAAEZ,MAAM,CAACa,YAAa;UAC9BC,KAAK,EAAEd,MAAM,CAACM,MAAM,CAACF,KAAM,CAAC;QAAA;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNvB,OAAA;QAAAa,QAAA,eACEb,OAAA;UAAQwB,IAAI,EAAC,QAAQ;UAAAX,QAAA,EAAC;QAAG;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACnB,EAAA,CArCMH,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AAuCX,eAAeA,IAAI;;AAOrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}