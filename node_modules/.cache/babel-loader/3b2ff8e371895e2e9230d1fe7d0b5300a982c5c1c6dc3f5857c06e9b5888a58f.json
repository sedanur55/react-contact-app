{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SedanurDurmu\\u015F\\\\contact-app\\\\src\\\\components\\\\Contacts\\\\Form\\\\index.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialForm = {\n  username: \"\",\n  email: \"\"\n};\nconst validate = values => {\n  const errors = {};\n  if (!values.username) {\n    errors.username = 'Required';\n  } else if (values.username.length > 15) {\n    errors.username = 'Must be 15 characters or less';\n  }\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n  return errors;\n};\nfunction Form({\n  addContact,\n  contacts\n}) {\n  _s();\n  // Pass the useFormik() hook initial form values, a validate function that will be called when\n  // form values change or fields are blurred, and a submit function that will\n  // be called when the form is submitted\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      email: ''\n    },\n    validate,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  const [form, setForm] = useState(initialForm);\n  // useEffect(()=>{\n  //     setForm(initialForm);\n  // },[contacts])\n  const onChangeInput = event => {\n    setForm({\n      ...form,\n      [event.target.name]: event.target.value\n    });\n  };\n  // const onSubmit= (event)=>{\n  //     event.preventDefault();\n  //     if(form.username ==='' || form.email ==='') {\n  //         return false;\n  //     }\n  //     addContact([...contacts,form]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"username\",\n          placeholder: \"User Name\",\n          value: formik.values.username,\n          onChange: onChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          placeholder: \"Email\",\n          value: formik.values.email,\n          onChange: onChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: formik.handleSubmit,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"+yJ6xGFoQ1qXZD9rYzBDS/ZFZfc=\", false, function () {\n  return [useFormik];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","useFormik","jsxDEV","_jsxDEV","initialForm","username","email","validate","values","errors","length","test","Form","addContact","contacts","_s","formik","initialValues","onSubmit","alert","JSON","stringify","form","setForm","onChangeInput","event","target","name","value","children","handleSubmit","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/SedanurDurmuÅŸ/contact-app/src/components/Contacts/Form/index.js"],"sourcesContent":["import React from 'react'\r\nimport {useState,useEffect} from 'react';\r\nimport { useFormik } from 'formik';\r\nconst initialForm = { username:\"\",email:\"\"};\r\nconst validate = values => {\r\n    const errors = {};\r\n    if (!values.username) {\r\n      errors.username = 'Required';\r\n    } else if (values.username.length > 15) {\r\n      errors.username = 'Must be 15 characters or less';\r\n    }\r\n  \r\n    if (!values.email) {\r\n      errors.email = 'Required';\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n      errors.email = 'Invalid email address';\r\n    }\r\n  \r\n    return errors;\r\n  };\r\nfunction Form({addContact,contacts}) {\r\n  \r\n        // Pass the useFormik() hook initial form values, a validate function that will be called when\r\n        // form values change or fields are blurred, and a submit function that will\r\n        // be called when the form is submitted\r\n        const formik = useFormik({\r\n          initialValues: {\r\n            username: '',\r\n            email: '',\r\n          },\r\n          validate,\r\n          onSubmit: values => {\r\n            alert(JSON.stringify(values, null, 2));\r\n          },\r\n        });\r\n    \r\n    const [form,setForm] = useState(initialForm);\r\n    // useEffect(()=>{\r\n    //     setForm(initialForm);\r\n    // },[contacts])\r\n    const onChangeInput= (event)=>{\r\n        setForm({...form,[event.target.name]:event.target.value})\r\n    }\r\n    // const onSubmit= (event)=>{\r\n    //     event.preventDefault();\r\n    //     if(form.username ==='' || form.email ==='') {\r\n    //         return false;\r\n    //     }\r\n    //     addContact([...contacts,form]);\r\n  return (\r\n    <div>\r\n       <form onSubmit={formik.handleSubmit}>\r\n        <div><input name='username' placeholder='User Name' value={formik.values.username} onChange={onChangeInput}></input></div>\r\n        <div><input name='email' placeholder='Email' value={formik.values.email} onChange={onChangeInput}></input></div>\r\n        <div><button onClick={formik.handleSubmit} >Add</button></div></form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}